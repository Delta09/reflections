1. How did viewing a diff between two versions of a file help you see the bug that was introduced?
It let me see exactly which lines were different, therefore allowing me to pinpoint the discrepancy better.


2. How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
Instead of worrying about manually saving the file, you can focus more on your work. Furthermore, you wouldn't have to worry bout naming conventions
between files.


3. What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved,
like Google Docs does?
If done correctly your commits would be labelled and easy to understand, whereas on Google Docs it has no labelling convention and the changes might
be too big or too small


4. Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file
separately?
Because the changes in each commit affect all the files


5. How can you use the commands git log and git diff to view the history of files?
git log allows you to see the different commit made to the project. git diff will help you figure out what was changed between 2 commits


6. How might using version control make you more confident to make changes that could break something?
If something does break, you could use the commit log to pinpoint at which point the buggy code was introduced and then fix it.


7.Now that you have your workspace set up, what do you want to try using Git for?
All future projects
